


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Runs on any Cortex M processor
    3 00000000         ; Activity_05
    4 00000000         ; MEMORY OPERATIONS
    5 00000000         ;
    6 00000000         ; Author: Place your name here
    7 00000000         ; Date Created: 
    8 00000000         ; Date Modified:
    9 00000000         ; Insert a brief description of your program solution he
                       re 
   10 00000000         ; Lab number and lab partner if applicable 
   11 00000000         ; list all inputs and outputs here.
   12 00000000         
   13 00000000         ; we align 32 bit variables to 32-bits
   14 00000000         ; we align op codes to 16 bits
   15 00000000         
   16 00000000         ;------ DO NOT MODIFY OR REMOVE THIS SECTION -----------
                       ----      
   17 00000000                 THUMB
   18 00000000                 AREA             DATA, ALIGN=4
   19 00000000         ;       GET tm4c123gh6pm.s
   20 00000000                 ALIGN
   21 00000000         ;-------------------------------------------------------
                       ----
   22 00000000 00516155 
                       ONESEC  DCD              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
   23 00000004 00145855 
                       QUARTERSEC
                               DCD              1333333     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
   24 00000008 001046AA 
                       FIFTHSEC
                               DCD              1066666     ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
   25 0000000C         
   26 0000000C         ; memory addresses for Port F control registers. 
   27 0000000C         
   28 0000000C 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   29 0000000C 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   30 0000000C 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   31 0000000C 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510  ; PULL UP RESISTOR 
                                                            MEMORY LOCATION 
   32 0000000C         
   33 0000000C         ; System control register use either one to turn on the 
                       clock for any port
   34 0000000C         
   35 0000000C 400FE118 



ARM Macro Assembler    Page 2 


                       SYSCTL_RCGC2_R
                               EQU              0x400FE118
   36 0000000C         
   37 0000000C 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   38 0000000C         
   39 0000000C         ;; Delcare global variables here if needed
   40 0000000C         
   41 0000000C         
   42 0000000C         ;;------------ DO NOT MODIFY OR REMOVE THIS SECTION-----
                       -------
   43 0000000C                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   44 00000000         ;      GET tm4c123gh6pm.s
   45 00000000                 EXPORT           Start
   46 00000000         ;;------------------------------------------------------
                       ------
   47 00000000         
   48 00000000         
   49 00000000         Start   proc                         ; DO NOT MODIFY THI
                                                            S LINE. THIS MARKS 
                                                            THE START OF YOUR A
                                                            SSEMBLY PROGRAM.
   50 00000000         
   51 00000000         ; board initialization here 
   52 00000000         ; insert all pins initilization code here before enterin
                       g the main endless loop.
   53 00000000         
   54 00000000         
   55 00000000 4829            LDR              R0, =SYSCTL_RCGCGPIO_R
   56 00000002 6801            LDR              R1, [R0]
   57 00000004 F041 0120       ORR              R1, #0x20
   58 00000008 6001            STR              R1, [R0]
   59 0000000A         
   60 0000000A         ;wait
   61 0000000A BF00            NOP
   62 0000000C BF00            NOP
   63 0000000E BF00            NOP
   64 00000010         
   65 00000010         ;enable pins : PF1, PF2, and PF4
   66 00000010 4A26            LDR              R2, =GPIO_PORTF_DEN_R
   67 00000012 6815            LDR              R5, [R2]
   68 00000014 F045 0516       ORR              R5, #0x16
   69 00000018 6015            STR              R5, [R2]
   70 0000001A         
   71 0000001A         ;Configure directon (input/output) : make PF1,PF2 output
                        and make PF4 an input
   72 0000001A 4E25            LDR              R6, =GPIO_PORTF_DIR_R
   73 0000001C 6837            LDR              R7, [R6]
   74 0000001E F047 0706       ORR              R7, #0x06
   75 00000022 F027 0710       BIC              R7, #0x10
   76 00000026 6037            STR              R7, [R6]
   77 00000028         
   78 00000028         ;enbale the pull-up resistor on the board
   79 00000028 F8DF 8088       LDR              R8, =GPIO_PORTF_PUR_R
   80 0000002C F8D8 9000       LDR              R9, [R8]
   81 00000030 F049 0910       ORR              R9, #0x10
   82 00000034 F8C8 9000       STR              R9, [R8]



ARM Macro Assembler    Page 3 


   83 00000038         loop
   84 00000038         ; main program loop
   85 00000038         ; insert your code here
   86 00000038         
   87 00000038         ;read from PF4
   88 00000038 F8DF A07C       LDR              R10, =GPIO_PORTF_DATA_R 
                                                            ;read from port F
   89 0000003C F8DA B000       LDR              R11, [R10]
   90 00000040 F00B 0B10       AND              R11, #0x10  ;read from PF4
   91 00000044 F1BB 0F00       CMP              R11, #0x00  ;compare whats in P
                                                            F4 to 0000 0000
   92 00000048 D004            BEQ              RED         ;turn red if PF4 ==
                                                             0 -- neg. logic so
                                                             pin is pressed
   93 0000004A F04B 0B04       ORR              R11, #0x04  ;if PF4 == 0/releas
                                                            ed then turn blue
   94 0000004E F8CA B000       STR              R11, [R10]
   95 00000052 E01A            B                Stop
   96 00000054         
   97 00000054         
   98 00000054         RED
   99 00000054 F02B 0B06       BIC              R11, #0x06
  100 00000058 F8CA B000       STR              R11, [R10]
  101 0000005C         
  102 0000005C F08B 0B02       EOR              R11, #0x02  ;turn on red
  103 00000060 F8CA B000       STR              R11, [R10]
  104 00000064 F000 F818       BL               delay
  105 00000068         
  106 00000068         
  107 00000068 F8DF A04C       LDR              R10, =GPIO_PORTF_DATA_R 
                                                            ;read from port F
  108 0000006C F8DA B000       LDR              R11, [R10]
  109 00000070 F00B 0B10       AND              R11, #0x10  ;read from PF4
  110 00000074 F1BB 0F00       CMP              R11, #0x00  ;compare whats in P
                                                            F4 to 0000 0000
  111 00000078 D000            BEQ              BLACK       ;turn red if PF4 ==
                                                             0 -- neg. logic so
                                                             pin is pressed
  112 0000007A E006            B                Stop
  113 0000007C         
  114 0000007C         BLACK
  115 0000007C F02B 0B06       BIC              R11, #0x06
  116 00000080 F8CA B000       STR              R11, [R10]
  117 00000084 F000 F808       BL               delay
  118 00000088 E7E4            B                RED
  119 0000008A         
  120 0000008A         Stop
  121 0000008A F000 F805       BL               delay
  122 0000008E F02B 0B06       BIC              R11, #0x06  ;turn off
  123 00000092 F8CA B000       STR              R11, [R10]
  124 00000096 E7CF            B                loop        ; do not modify or 
                                                            delete this line. 
  125 00000098         
  126 00000098         
  127 00000098         ;-------------DO NOT MODIFY ANY LINES BELOW THIS SECTION
                       ------------
  128 00000098         ;------------delay------------
  129 00000098         ; Delay function for testing, which delays about 3*count
                        cycles.



ARM Macro Assembler    Page 4 


  130 00000098         ; Input: R0  count
  131 00000098         ; Output: none
  132 00000098         
  133 00000098         delay
  134 00000098 B418            PUSH             {R3, R4}
  135 0000009A 4B08            LDR              R3, = ONESEC
  136 0000009C 681C            LDR              R4, [R3]
  137 0000009E 1E64    d       SUBS             R4, R4, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
  138 000000A0 D1FD            BNE              d           ; if count (R0) != 
                                                            0, skip to 'd'
  139 000000A2 BC18            POP              {R3, R4}
  140 000000A4 4770            BX               LR          ; return
  141 000000A6         
  142 000000A6 00 00           ALIGN
  143 000000A8                 ENDP
  144 000000A8                 END
              400FE608 
              4002551C 
              40025400 
              40025510 
              400253FC 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\display.d -o.\display.o -I.\RTE\_Activity_8 -I"C:\Users\Cook
i\OneDrive\Desktop\EECE 237\ARM\CMSIS\6.1.0\CMSIS\Core\Include" -I"C:\Users\Coo
ki\OneDrive\Desktop\EECE 237\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123" --pred
efine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 540" --predefine="TM4
C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\display.lst display.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 18 in file display.s
   Uses
      None
Comment: DATA unused
FIFTHSEC 00000008

Symbol: FIFTHSEC
   Definitions
      At line 24 in file display.s
   Uses
      None
Comment: FIFTHSEC unused
ONESEC 00000000

Symbol: ONESEC
   Definitions
      At line 22 in file display.s
   Uses
      At line 135 in file display.s
Comment: ONESEC used once
QUARTERSEC 00000004

Symbol: QUARTERSEC
   Definitions
      At line 23 in file display.s
   Uses
      None
Comment: QUARTERSEC unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 43 in file display.s
   Uses
      None
Comment: .text unused
BLACK 0000007C

Symbol: BLACK
   Definitions
      At line 114 in file display.s
   Uses
      At line 111 in file display.s
Comment: BLACK used once
RED 00000054

Symbol: RED
   Definitions
      At line 98 in file display.s
   Uses
      At line 92 in file display.s
      At line 118 in file display.s

Start 00000000

Symbol: Start
   Definitions
      At line 49 in file display.s
   Uses
      At line 45 in file display.s
Comment: Start used once
Stop 0000008A

Symbol: Stop
   Definitions
      At line 120 in file display.s
   Uses
      At line 95 in file display.s
      At line 112 in file display.s

d 0000009E

Symbol: d
   Definitions
      At line 137 in file display.s
   Uses
      At line 138 in file display.s
Comment: d used once
delay 00000098

Symbol: delay
   Definitions
      At line 133 in file display.s
   Uses
      At line 104 in file display.s
      At line 117 in file display.s
      At line 121 in file display.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


loop 00000038

Symbol: loop
   Definitions
      At line 83 in file display.s
   Uses
      At line 124 in file display.s
Comment: loop used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 28 in file display.s
   Uses
      At line 88 in file display.s
      At line 107 in file display.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 30 in file display.s
   Uses
      At line 66 in file display.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 29 in file display.s
   Uses
      At line 72 in file display.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 31 in file display.s
   Uses
      At line 79 in file display.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGC2_R 400FE118

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 35 in file display.s
   Uses
      None
Comment: SYSCTL_RCGC2_R unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 37 in file display.s
   Uses
      At line 55 in file display.s
Comment: SYSCTL_RCGCGPIO_R used once
6 symbols
354 symbols in table
